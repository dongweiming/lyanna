server {
    server_name {{ domain }};
    keepalive_timeout 5;

    location ^~ /static/ {
        include  /etc/nginx/mime.types;
        root /home/{{ ansible_ssh_user }}/{{ app_name }};
    }

    location ^~ /img/ {
        include  /etc/nginx/mime.types;
        root /home/{{ ansible_ssh_user }}/{{ app_name }}/static;
    }

    location ^~ /fonts/ {
        include  /etc/nginx/mime.types;
        root /home/{{ ansible_ssh_user }}/{{ app_name }}/static;
    }

    location ~* \.(woff|eot|ttf|svg|mp4|webm|jpg|jpeg|png|gif|ico|css|js)$ {
        expires 1d;
    }

    if ($http_user_agent ~* (Scrapy|Curl|HttpClient)) {
        return 403;
    }

    # Disable specify UA and empty UA access
    if ($http_user_agent ~ "FeedDemon|JikeSpider|Indy Library|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|CoolpadWebkit|Java|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|YisouSpider|HttpClient|MJ12bot|heritrix|EasouSpider|Ezooms|HTTPie|Go-http-client|^$" ) {
        return 403;
    }

    location ~ ^/admin {
        allow 1.2.3.4;  # 你猜
        deny all;
        proxy_pass http://unix:/home/{{ ansible_ssh_user }}/{{ app_name }}/{{ app_name }}.sock;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        proxy_redirect off;
        proxy_pass http://unix:/home/{{ ansible_ssh_user }}/{{ app_name }}/{{ app_name }}.sock;
    }

    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;

    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/blog.pycourses.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/blog.pycourses.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = blog.pycourses.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name blog.pycourses.com;

    listen 80;
    return 404; # managed by Certbot


}
