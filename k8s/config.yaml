apiVersion: v1
kind: ConfigMap
metadata:
  name: lyanna-cfg
data:
  db_port: "3306"
  database: test
  db_user: lyanna
  db_password: lyanna
  memcached_host: lyanna-memcached
  replication-password: lyanna
  redis_sentinel_host: redis-sentinel
  redis_sentinel_port: "26379"
  db_url: mysql://lyanna:lyanna@lyanna-mariadb:3306/test?charset=utf8
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: lyanna-ing-static
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      include /etc/nginx/mime.types;
      proxy_cache static-cache;
      proxy_ignore_headers Cache-Control;
      proxy_cache_valid any 30m;
      add_header X-Cache-Status $upstream_cache_status;
spec:
  rules:
  - host: lyanna.local
    http:
      paths:
        - path: /static
          backend:
            serviceName: lyanna-svc
            servicePort: 80
        - path: /img
          backend:
            serviceName: lyanna-svc
            servicePort: 80
        - path: /fonts
          backend:
            serviceName: lyanna-svc
            servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: lyanna-ing-admin
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      allow "1.2.3.4";
      deny all;
spec:
  rules:
  - host: lyanna.local
    http:
      paths:
        - path: /admin
          backend:
            serviceName: lyanna-svc
            servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: lyanna-ing
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: lyanna.local
    http:
      paths:
        - path: /
          backend:
            serviceName: lyanna-svc
            servicePort: 80
