# Generated by Django 2.1.15 on 2020-04-18 07:10

from django.db import migrations, models
import tortoise_orm.fields
import tortoise_orm.models.blog
import tortoise_orm.models.comment
import tortoise_orm.models.mixin
import tortoise_orm.models.react


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('user_id', tortoise_orm.fields.IntField()),
                ('target_id', tortoise_orm.fields.IntField()),
                ('target_kind', tortoise_orm.fields.IntField()),
            ],
            options={
                'abstract': False,
            },
            bases=(tortoise_orm.models.comment.CommentMixin, tortoise_orm.models.react.ReactMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('github_id', tortoise_orm.fields.IntField()),
                ('target_kind', tortoise_orm.fields.IntField()),
                ('target_id', tortoise_orm.fields.IntField()),
                ('ref_id', tortoise_orm.fields.IntField(default=0)),
            ],
            options={
                'db_table': 'comments',
            },
            bases=(tortoise_orm.models.react.ReactMixin, tortoise_orm.models.mixin.ContentMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GithubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('gid', tortoise_orm.fields.IntField(unique=True)),
                ('email', tortoise_orm.fields.CharField(default='', max_length=100, unique=True)),
                ('username', tortoise_orm.fields.CharField(max_length=100, unique=True)),
                ('picture', tortoise_orm.fields.CharField(default='', max_length=100)),
                ('link', tortoise_orm.fields.CharField(default='', max_length=100)),
            ],
            options={
                'db_table': 'github_users',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('title', tortoise_orm.fields.CharField(max_length=100, unique=True)),
                ('author_id', tortoise_orm.fields.IntField()),
                ('slug', tortoise_orm.fields.CharField(max_length=100)),
                ('summary', tortoise_orm.fields.CharField(max_length=255)),
                ('type', tortoise_orm.fields.IntField(default=0)),
                ('_pageview', tortoise_orm.fields.IntField(db_column='pageview', default=0)),
            ],
            options={
                'db_table': 'posts',
            },
            bases=(tortoise_orm.models.comment.CommentMixin, tortoise_orm.models.react.ReactMixin, tortoise_orm.models.blog.StatusMixin, tortoise_orm.models.mixin.ContentMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('post_id', tortoise_orm.fields.IntField()),
                ('tag_id', tortoise_orm.fields.IntField()),
                ('updated_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'post_tags',
            },
        ),
        migrations.CreateModel(
            name='ReactItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('target_id', tortoise_orm.fields.IntField()),
                ('target_kind', tortoise_orm.fields.IntField()),
                ('user_id', tortoise_orm.fields.IntField()),
                ('reaction_type', tortoise_orm.fields.IntField()),
            ],
            options={
                'db_table': 'react_items',
            },
        ),
        migrations.CreateModel(
            name='ReactStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('target_id', tortoise_orm.fields.IntField()),
                ('target_kind', tortoise_orm.fields.IntField()),
                ('upvote_count', tortoise_orm.fields.IntField(default=0)),
                ('funny_count', tortoise_orm.fields.IntField(default=0)),
                ('love_count', tortoise_orm.fields.IntField(default=0)),
                ('surprised_count', tortoise_orm.fields.IntField(default=0)),
                ('sad_count', tortoise_orm.fields.IntField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('post_id', tortoise_orm.fields.IntField()),
                ('index', tortoise_orm.fields.SmallIntField()),
                ('special_id', tortoise_orm.fields.SmallIntField()),
            ],
            options={
                'db_table': 'special_item',
            },
        ),
        migrations.CreateModel(
            name='SpecialTopic',
            fields=[
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('id', tortoise_orm.fields.SmallIntField(primary_key=True, serialize=False)),
                ('intro', tortoise_orm.fields.CharField(max_length=2000)),
                ('slug', tortoise_orm.fields.CharField(max_length=100)),
                ('title', tortoise_orm.fields.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'special_topic',
            },
            bases=(tortoise_orm.models.blog.StatusMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('user_id', tortoise_orm.fields.IntField()),
            ],
            options={
                'db_table': 'statuses',
            },
            bases=(tortoise_orm.models.mixin.ContentMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('name', tortoise_orm.fields.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', tortoise_orm.fields.DatetimeField(auto_now_add=True)),
                ('email', tortoise_orm.fields.CharField(max_length=100)),
                ('name', tortoise_orm.fields.CharField(max_length=100, unique=True)),
                ('avatar', tortoise_orm.fields.CharField(default='', max_length=100)),
                ('password', tortoise_orm.fields.TextField()),
                ('active', tortoise_orm.fields.BooleanField(default=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
    ]
